Чек-лист написания в стиле best practice:
1. .dockerignore
2. Отключение кешей
3. Установка и удаление в одном шаге
4. Порядок выполнения шагов
5. Логи в stdout/stderr
6. COPY/ADD и ENTRYPOINT/CMD

1. .dockerignore
    Создать файл .dockerignore и включить в него все файлы, которые не нужны для образа, 
    например папки .git и .vscode

2. Отключение кешей
    Отключить кеширование пакетов. Для этого, для debian напрмиер, в dockerfile добаявляем следующую строку
        RUN rm -rf /var/lib/apt/lists/*
    Команда должна быть прописана в той же директиве, что и установка пакетов:
        RUN set -ex && \
            apt-get update && \
            apt-get install -y nginx && \
            rm -rf /var/lib/apt/lists/*
    set -ex сделать логи более читабельными, разделит логи разных команд

3. Установка и удаление в одном шаге
    Помним, что каждый слой является read-only. Если удаление или изменение не внести в текущей директиве (RUN например),
    то слой запишется и сохранится. Удаление или изменение предыдущего, а она становится предыдущей, слоя невозможно.
    Например, удалить кеш из предыдущего слоя (как в пункте 2) в текущем не получится.

4. Порядок выполнения шагов
    Помним про кеш сборки.
    При пересборке образа проводится проверка кеша слоя, если изменений не было, то слой не собирается заново.
    Слои, в которые будут вносится изменения, нужно добавлять последними, например директива COPY для копирования кода.
    Код будет постоянно меняться, а вот пакеты ОС не будут. При внесении изменений в код, будет собран новый образ, в котором
    поменяется только слой с копированием кода, а не весь образ.

5. Логи в stdout/stderr
    Для вывода логов в stdout/stderr, апример для контейнера с nginx, можно добавить в dockerfile вот такую строку
    RUN set -ex && \
        ln -sf /dev/stdout /var/log/nginx/access.log && \
        ln -sf /dev/stderr /var/log/nginx/error.log
    Этот же подход применяется и в официальном образе nginx.
    Чтобы не запутаться: если мы используем готовый образ nginx, то логи будут писаться в stdout/stderr, поскольку там уже 
    все прописано. Если мы создаем свой образ nginx на базе какой-то ОС, то должны сами прописать вывод логов в stdout/stderr.

6. COPY/ADD и ENTRYPOINT/CMD
    COPY просто копирует
    ADD может копировать, может скачать файлы по url, а если это был архив, то по пути еще и разархивирует его.
    Не знаем, что применить? Применяем COPY

    ENTRYPOINT - команда, которая должна выполняться при старте контейнера
    CMD - параметры для команды в директиве ENTRYPOINT.
    При запуске контейнера мы можем перезаписать параметры, указанные в CMD.



Пример dockerfile в стиле best practice:
    FROM debian:jessie

    RUN set -ex && \
        apt-get update && \
        apt-get install -y nginx

    ADD . /etc/nginx/

    EXPOSE 80
    ENTRYPOINT nginx -g 'daemon off;'