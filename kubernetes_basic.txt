kubectl Cheat Sheet: https://kubernetes.io/docs/reference/kubectl/cheatsheet/#viewing-finding-resources

---
АБСТРАКЦИИ

Все абстракции в кубернетес существуют одна над другой.
ReplicaSet - абстракция, которая существует поверх абстракции Pod, а абстракция deployment существует поверх replicaSet.
ReplicaSet представляет из себя шаблон (template), который позволяет масштабировать поды.

Нужно взаимодействовать с теми объектами, которые создавала. То есть несмотря на то, что деплоймент создает репликасеты,
взаимодействовать нужно с деплоймент (при необходимости изменить репликасет, созданный через деплоймент, меняем через 
деплоймент). 

Если в apiVersion указано v1 или v2, то это базовый объект, а
если указано apps/v1 - то объект, который основывается на базовом другом объекте, напр. объект replicaSet, основанный на pod.

При изменении деплоймента будет создан новый репликасет, а старый репликасет не удалится. Это необходимо для 
обновления по RollingUpdate - постепенное обновление объекта за объектом. При RollingUpdate новая версия должна быть обратно
совместимой, поскольку запросы от пользователя в момент обновления могут отправляться в разные поды с разными версиями.
Старый репликасет сохранится, но количество его под будет равно нулю.

---
Получить значение только одного поля, в данном случае поля image:
kubectl get po <pod_name> -o=jsonpath='{.spec.containers[*].image}{"\n"}'

Ключ -o jsonpath позволяет получить не весь объект целиком, а только содержимое конкретных полей.
Он крайне полезен при написании скриптов для автоматизации задач в Kubernetes.
Почитать про его возможности подробней можно тут:
    https://kubernetes.io/docs/reference/kubectl/jsonpath/

---